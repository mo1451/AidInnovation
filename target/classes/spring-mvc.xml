<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
    
    <!-- 静态文件配置 -->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/fonts/" mapping="/fonts/**"/>
    <mvc:resources location="/icon/" mapping="/icon/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    
    <!-- 处理器映射器HandlerMapping -->
    <!-- 根据配置的Handler的bean的name(action的链接)进行查找Handler 将action的url配置在bean的name中 -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
		
	<!-- 处理器适配器HandlerAdapter -->
	<!-- springmvc的框架根据接口判断是一个适配器，所有的适配器都要实现HandlerAdapter接口
		规定了Handler的编写规则，编写Handler实现Controller接口 -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
		
	<!-- 视图解析器ViewResolver -->       
	<!-- 解析jsp，默认支持jstl -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>      
	
	<!-- 添加注解驱动 -->    
    <mvc:annotation-driven />    
    
    <!-- 拦截器 -->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		<bean class="com.mo1451.interceptor.Interceptor1"></bean>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/center/**"/>
    		<mvc:mapping path="/admin/**"/>
    		<mvc:exclude-mapping path="/css/**"/>
    		<mvc:exclude-mapping path="/js/**"/>
    		<bean class="com.mo1451.interceptor.LoginInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    
    <!-- 设置使用注解的类所在的包 -->  
    <context:component-scan base-package="com.mo1451.controller" />    
                         
    <!--                       
    避免IE执行AJAX时，返回JSON出现下载文件  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
      
     添加注解驱动    
    <mvc:annotation-driven />  
    <mvc:default-servlet-handler/>  
      
    设置使用注解的类所在的包  
    <context:component-scan base-package="com.chillax.controller" />  
      
    完成请求和注解POJO的映射  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> JSON转换器  
            </list>  
        </property>  
    </bean>  
      
    定义跳转的文件的前后缀 ，视图模式配置  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    SpringMVC上传文件时，需要配置MultipartResolver处理器  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        默认编码  
        <property name="defaultEncoding" value="utf-8" />    
        文件大小最大值  
        <property name="maxUploadSize" value="10485760000" />    
        内存中的最大值  
        <property name="maxInMemorySize" value="40960" />    
    </bean>    -->
  
</beans>  