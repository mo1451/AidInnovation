<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo1451.mapper.ProblemDescrMapper">
  <resultMap id="BaseResultMap" type="com.mo1451.model.ProblemDescr">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fun" jdbcType="VARCHAR" property="fun" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="problem" jdbcType="VARCHAR" property="problem" />
    <result column="parameter" jdbcType="VARCHAR" property="parameter" />
    <result column="goal" jdbcType="VARCHAR" property="goal" />
    <result column="lim" jdbcType="VARCHAR" property="lim" />
    <result column="wordid" jdbcType="INTEGER" property="wordid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mo1451.model.ProblemDescrWithBLOBs">
    <result column="source" jdbcType="LONGVARCHAR" property="source" />
    <result column="descr" jdbcType="LONGVARCHAR" property="descr" />
    <result column="principle" jdbcType="LONGVARCHAR" property="principle" />
    <result column="exist" jdbcType="LONGVARCHAR" property="exist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fun, component, problem, parameter, goal, lim, wordid
  </sql>
  <sql id="Blob_Column_List">
    source, descr, principle, exist
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mo1451.model.ProblemDescrExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem_descr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mo1451.model.ProblemDescrExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from problem_descr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem_descr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from problem_descr
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mo1451.model.ProblemDescrExample">
    delete from problem_descr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mo1451.model.ProblemDescrWithBLOBs" useGeneratedKeys="true" keyProperty="id">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
    </selectKey>
    insert into problem_descr (id, fun, component, 
      problem, parameter, goal, 
      lim, wordid, source, 
      descr, principle, exist
      )
    values (#{id,jdbcType=INTEGER}, #{fun,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, 
      #{problem,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, #{goal,jdbcType=VARCHAR}, 
      #{lim,jdbcType=VARCHAR}, #{wordid,jdbcType=INTEGER}, #{source,jdbcType=LONGVARCHAR}, 
      #{descr,jdbcType=LONGVARCHAR}, #{principle,jdbcType=LONGVARCHAR}, #{exist,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mo1451.model.ProblemDescrWithBLOBs"  useGeneratedKeys="true" keyProperty="id">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
        SELECT LAST_INSERT_ID() AS ID
    </selectKey>
    insert into problem_descr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fun != null">
        fun,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="problem != null">
        problem,
      </if>
      <if test="parameter != null">
        parameter,
      </if>
      <if test="goal != null">
        goal,
      </if>
      <if test="lim != null">
        lim,
      </if>
      <if test="wordid != null">
        wordid,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="principle != null">
        principle,
      </if>
      <if test="exist != null">
        exist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fun != null">
        #{fun,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="problem != null">
        #{problem,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="goal != null">
        #{goal,jdbcType=VARCHAR},
      </if>
      <if test="lim != null">
        #{lim,jdbcType=VARCHAR},
      </if>
      <if test="wordid != null">
        #{wordid,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=LONGVARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=LONGVARCHAR},
      </if>
      <if test="principle != null">
        #{principle,jdbcType=LONGVARCHAR},
      </if>
      <if test="exist != null">
        #{exist,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mo1451.model.ProblemDescrExample" resultType="java.lang.Long">
    select count(*) from problem_descr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update problem_descr
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fun != null">
        fun = #{record.fun,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null">
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.problem != null">
        problem = #{record.problem,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null">
        parameter = #{record.parameter,jdbcType=VARCHAR},
      </if>
      <if test="record.goal != null">
        goal = #{record.goal,jdbcType=VARCHAR},
      </if>
      <if test="record.lim != null">
        lim = #{record.lim,jdbcType=VARCHAR},
      </if>
      <if test="record.wordid != null">
        wordid = #{record.wordid,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.descr != null">
        descr = #{record.descr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.principle != null">
        principle = #{record.principle,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.exist != null">
        exist = #{record.exist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update problem_descr
    set id = #{record.id,jdbcType=INTEGER},
      fun = #{record.fun,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      problem = #{record.problem,jdbcType=VARCHAR},
      parameter = #{record.parameter,jdbcType=VARCHAR},
      goal = #{record.goal,jdbcType=VARCHAR},
      lim = #{record.lim,jdbcType=VARCHAR},
      wordid = #{record.wordid,jdbcType=INTEGER},
      source = #{record.source,jdbcType=LONGVARCHAR},
      descr = #{record.descr,jdbcType=LONGVARCHAR},
      principle = #{record.principle,jdbcType=LONGVARCHAR},
      exist = #{record.exist,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update problem_descr
    set id = #{record.id,jdbcType=INTEGER},
      fun = #{record.fun,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      problem = #{record.problem,jdbcType=VARCHAR},
      parameter = #{record.parameter,jdbcType=VARCHAR},
      goal = #{record.goal,jdbcType=VARCHAR},
      lim = #{record.lim,jdbcType=VARCHAR},
      wordid = #{record.wordid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mo1451.model.ProblemDescrWithBLOBs">
    update problem_descr
    <set>
      <if test="fun != null">
        fun = #{fun,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="problem != null">
        problem = #{problem,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="goal != null">
        goal = #{goal,jdbcType=VARCHAR},
      </if>
      <if test="lim != null">
        lim = #{lim,jdbcType=VARCHAR},
      </if>
      <if test="wordid != null">
        wordid = #{wordid,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=LONGVARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=LONGVARCHAR},
      </if>
      <if test="principle != null">
        principle = #{principle,jdbcType=LONGVARCHAR},
      </if>
      <if test="exist != null">
        exist = #{exist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mo1451.model.ProblemDescrWithBLOBs">
    update problem_descr
    set fun = #{fun,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      problem = #{problem,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR},
      goal = #{goal,jdbcType=VARCHAR},
      lim = #{lim,jdbcType=VARCHAR},
      wordid = #{wordid,jdbcType=INTEGER},
      source = #{source,jdbcType=LONGVARCHAR},
      descr = #{descr,jdbcType=LONGVARCHAR},
      principle = #{principle,jdbcType=LONGVARCHAR},
      exist = #{exist,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mo1451.model.ProblemDescr">
    update problem_descr
    set fun = #{fun,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      problem = #{problem,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR},
      goal = #{goal,jdbcType=VARCHAR},
      lim = #{lim,jdbcType=VARCHAR},
      wordid = #{wordid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>